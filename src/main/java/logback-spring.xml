<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true"  scanPeriod="60 seconds" debug="false">
   <contextName>logback-mybatis</contextName>
   <!-- 定义日志文件 输入位置 -->  
    <property name="log.path" value="my-mybatis.log" />
    
     <!-- 彩色日志 -->
    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />
    <!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN" value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}" />
     
   <!-- 自定义输出,输出在控制台  -->
   <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
         <encoder>
         <!-- <pattern>%d{HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n</pattern>  -->
          <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>utf8</charset> 
        </encoder>
   </appender>
   
   <!--输出到文件,appender用来格式化日志输出节点，有俩个属性name和class，class用来指定哪种输出策略，常用就是控制台输出策略和文件输出策略。-->
    <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.path}</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>logback.%d{yyyy-MM-dd}.log</fileNamePattern>
              <!--日志文件保留天数-->
             <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <encoder>
        <!-- <pattern>${CONSOLE_LOG_PATTERN}</pattern> -->
            <pattern>%d{HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

   <!-- root节点是必选节点，用来指定最基础的日志输出级别，只有一个level属性。 -->
    <root level="info">
        <appender-ref ref="console" />
        <appender-ref ref="file" />
    </root>
    
   <!--   addtivity:是否向上级loger传递打印信息。默认是true。 -->
    <logger name="com.example.controller" level="debug" additivity="false">
        <appender-ref ref="console"/>
    </logger>
    <logger name="com.example.mapper" level="debug" additivity="false">
        <appender-ref ref="console"/>
        <appender-ref ref="file" />
    </logger>
    
</configuration>